#print("{}".format(10,20,30))틀에 갯수보다 값을 많이 입력하면 문제 없음
#print("{}{}".format(10)) 틀에 갯수가 값보다 더 많으면 오류 발생


#포맷 함수는 틀을 만들고 틀안에 값을 넣어서 활용한다
print("{}살".format(10))
print("{}월 {}일".format(10,20))
print("{}년\n {}월\n {}일".format(2022, 11, 8))

a = 52
b = 273
#52 + 273 = {더한값} 처럼 출력 하려면
##print(a,"+",b,"=",a+b)
print("{} + {} = {}".format(a,b, a+b))
#52+273={더한값} 띄어쓰기 없이 바로 출력하려면
#print(a+"+"+b+"="+(a+b)) str 오류
##c = str(a)+"+"+str(b)+"="+str(a+b)
#print(c)
#위 같은 복잡한 식을 쉽게 바꿔주는 것이 포맷함수 
print("{}+{}={}".format(a, b, a+b))

#split 함수 괄호를 생략하면 띄어쓰기,줄바꿈,탭문자 등으로 자름
print("10 20 30 40".split(" ")) #['10', '20', '30', '40']
print("10-20-30-40".split("-")) #['10', '20', '30', '40']
print("10     20\n 30\t 40".split())#['10', '20', '30', '40']
#공백이 여러칸 들어가고 탭문자 줄바꿈을 써도 하나의 공백으로 인식하고 잘라서 값은 같다